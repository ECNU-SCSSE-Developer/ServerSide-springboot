<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tia.springbootserver.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.tia.springbootserver.entity.User">
    <id column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="specialty" jdbcType="VARCHAR" property="specialty" />
    <result column="contacts" jdbcType="VARCHAR" property="contacts" />
  </resultMap>
  <sql id="Base_Column_List">
    student_id, student_name, grade, major, specialty, contacts, open_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from User
    where open_id = #{openId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from User
    where open_id = #{openId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.tia.springbootserver.entity.User">
    insert into User (student_id, student_name, grade, 
      major, specialty, contacts, 
      open_id)
    values (#{studentId,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, #{grade,jdbcType=INTEGER}, 
      #{major,jdbcType=VARCHAR}, #{specialty,jdbcType=VARCHAR}, #{contacts,jdbcType=VARCHAR}, 
      #{openId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tia.springbootserver.entity.User">
    insert into User
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="specialty != null">
        specialty,
      </if>
      <if test="contacts != null">
        contacts,
      </if>
      <if test="openId != null">
        open_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="specialty != null">
        #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tia.springbootserver.entity.User">
    update User
    <set>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="specialty != null">
        specialty = #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
    </set>
    where open_id = #{openId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tia.springbootserver.entity.User">
    update User
    set student_name = #{studentName,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER},
      major = #{major,jdbcType=VARCHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR}
    where open_id = #{openId,jdbcType=VARCHAR}
  </update>
</mapper>